services:
  redis:
    image: redis:6.2-alpine
    container_name: redis
    env_file:
      - ./auction-service/.env
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  redis-registry:
    image: redis:6.2-alpine
    container_name: redis-registry
    env_file:
      - ./api-gateway/.env
    restart: always
    ports:
      - "6380:6379"
    volumes:
      - redis-data-registry:/data

  nats:
    image: nats:latest
    container_name: nats-server
    ports:
      - "4222:4222"
      - "8222:8222"
    environment:
      - NATS_CLUSTER_ADVERTISE=localhost

  postgres-auction:
    image: postgres:17.0
    container_name: db-auction
    env_file:
      - ./auction-service/.env
    ports:
      - "5432:5432"
    volumes:
      - /data/postgres:/data/postgres

  postgres-bidder:
    image: postgres:17.0
    container_name: db-bidder
    env_file:
      - ./bidder-service/.env
    ports:
      - "5433:5432"
    volumes:
      - /data/postgres:/data/postgres

  pgadmin:
    image: dpage/pgadmin4:8.12
    ports:
      - "8080:80"
    volumes:
      - /data/pgadmin:/root/.pgadmin
    env_file:
      - .env

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9095:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "4001:3000"
    volumes:
      - grafana-data:/var/lib/grafana

  mongo1:
    image: mongo:7.0
    container_name: mongo-1
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    ports:
      - 27017:27017
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017',priority:3},{_id:1,host:'host.docker.internal:27018',priority:1},{_id:2,host:'host.docker.internal:27019',priority:2}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
    volumes:
      - "mongo1_data:/data/db"
      - "mongo1_config:/data/configdb"

  mongo2:
    image: mongo:7.0
    container_name: mongo-2
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27018"]
    ports:
      - 27018:27018
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - "mongo2_data:/data/db"
      - "mongo2_config:/data/configdb"

  mongo3:
    image: mongo:7.0
    container_name: mongo-3
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27019"]
    ports:
      - 27019:27019
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - "mongo3_data:/data/db"
      - "mongo3_config:/data/configdb"

volumes:
  redis-data:
  redis-data-registry:
  grafana-data:
  mongo1_data:
  mongo2_data:
  mongo3_data:
  mongo1_config:
  mongo2_config:
  mongo3_config:
